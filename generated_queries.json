[
  {
    "question": "Show the number of nodes created per day",
    "query": "SELECT created_at::DATE AS creation_date, COUNT(*) AS node_count FROM nodedata GROUP BY created_at::DATE ORDER BY creation_date;"
  },
  {
    "question": "How many pods have current state running?",
    "query": "SELECT COUNT(*) FROM poddata WHERE state = 'Running';"
  },
  {
    "question": "How many nodes are there per cluster?",
    "query": "SELECT cluster_name, COUNT(node_id) AS node_count FROM nodedata GROUP BY cluster_name;"
  },
  {
    "question": "What are the account id of the products that have category as 'COMPUTE-RI' and subcategory as 'H200-RI' in the month of April 2025?",
    "query": "SELECT account_id FROM costs_data WHERE category = 'COMPUTE-RI' AND subcategory = 'H200-RI' AND date_day >= '2025-04-01' AND date_day < '2025-05-01';"
  },
  {
    "question": "Show me the clusters that have more than 5 nodes, grouped by platform",
    "query": "SELECT cluster_name, platform, COUNT(node_id) AS node_count FROM nodedata GROUP BY cluster_name, platform HAVING COUNT(node_id) > 5;"
  },
  {
    "question": "From how many projects did the last time we fetched metadata lies in last month",
    "query": "SELECT COUNT(DISTINCT project_id) AS project_count FROM projectdata WHERE DATE_TRUNC('month', last_fetched_time) = DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 MONTH');"
  },
  {
    "question": "What is the distribution of instance types?",
    "query": "SELECT instance_type, COUNT(*) AS instance_count FROM nodedata GROUP BY instance_type ORDER BY instance_count DESC;"
  },
  {
    "question": "What are all the nodes in the 'sensei-eks01-prod-cluster' cluster?How many pods are currently in the 'Running' state?",
    "query": "SELECT node_name FROM nodedata WHERE cluster_name = 'sensei-eks01-prod-cluster'; SELECT COUNT(*) AS running_pods_count FROM poddata WHERE cluster_name = 'sensei-eks01-prod-cluster' AND state = 'Running';"
  },
  {
    "question": "List all pods that have terminated in the last 24 hours.",
    "query": "SELECT * FROM poddata WHERE is_terminated = TRUE AND end_time >= NOW() - INTERVAL '24 hours';"
  },
  {
    "question": "What is the average CPU utilization per pod over the past week?",
    "query": "SELECT AVG(dcgm_fi_dev_gpu_util) AS average_cpu_utilization FROM metrics WHERE metric_timestamp >= CURRENT_DATE - INTERVAL '7 days';"
  },
  {
    "question": "Which pods have GPU utilization above 80%?",
    "query": "SELECT DISTINCT pod_id FROM metrics WHERE dcgm_fi_dev_gpu_util > 80;"
  },
  {
    "question": "Identify pods with memory usage exceeding 90%.",
    "query": "SELECT m.pod_id, m.pod_name, m.namespace, m.project_id, m.project_name, m.cluster_name, m.metric_timestamp, m.dcgm_fi_dev_mem_copy_util FROM metrics m JOIN poddata p ON m.pod_id = p.pod_id WHERE m.dcgm_fi_dev_mem_copy_util > 90;"
  },
  {
    "question": "How many pods were initiated by each project?",
    "query": "SELECT project, COUNT(*) AS pod_count FROM poddata GROUP BY project ORDER BY pod_count DESC;"
  },
  {
    "question": "List pods that have not reported metrics in the last 2 hours.",
    "query": "SELECT pod_id FROM poddata WHERE last_metric_received_time < NOW() - INTERVAL '2 hours';"
  },
  {
    "question": "Which pods have been running for more than 24 hours?",
    "query": "SELECT pod_id FROM poddata WHERE end_time - start_time > INTERVAL '24 hours';"
  },
  {
    "question": "What is the distribution of pod states across all clusters?",
    "query": "SELECT cluster_name, state, COUNT(*) AS state_count FROM poddata GROUP BY cluster_name, state ORDER BY cluster_name, state;"
  },
  {
    "question": "Identify pods with the highest GPU count.",
    "query": "SELECT pod_id, name, gpu_count FROM poddata ORDER BY gpu_count DESC LIMIT 1;"
  },
  {
    "question": "How many nodes exist in each cluster?",
    "query": "SELECT cluster_name, COUNT(node_id) AS node_count FROM nodedata GROUP BY cluster_name;"
  },
  {
    "question": "List nodes created per day over the last month.",
    "query": "SELECT DATE(created_at) AS creation_date, COUNT(*) AS node_count FROM nodedata WHERE created_at >= CURRENT_DATE - INTERVAL '1 MONTH' GROUP BY DATE(created_at) ORDER BY creation_date;"
  },
  {
    "question": "Which nodes have the highest CPU capacity?",
    "query": "SELECT node_id, node_name, cpu_count FROM nodedata ORDER BY cpu_count DESC LIMIT 1;"
  },
  {
    "question": "Identify nodes with memory greater than 64GB.",
    "query": "SELECT * FROM nodedata WHERE instance_type IN ( SELECT instance_type FROM instance_type_metadata WHERE memory_mb > 64000 );"
  },
  {
    "question": "What is the average number of nodes per platform?",
    "query": "SELECT platform, AVG(gpu_count) AS average_nodes_per_platform FROM poddata GROUP BY platform;"
  },
  {
    "question": "List nodes that have not been updated in the last week.",
    "query": "SELECT node_id, node_name FROM nodedata WHERE snapshot_time < NOW() - INTERVAL '7 days';"
  },
  {
    "question": "Which nodes are currently underutilized?",
    "query": "SELECT nd.node_id, nd.node_name, nd.cluster_name, nd.instance_type, nd.created_at, nd.snapshot_time, nd.platform FROM nodedata nd JOIN instance_type_metadata it ON nd.instance_type = it.instance_type WHERE nd.node_id NOT IN ( SELECT DISTINCT m.pod_id FROM metrics m ) ORDER BY nd.created_at;"
  },
  {
    "question": "How many nodes were decommissioned last month?",
    "query": "SELECT COUNT(*) AS decommissioned_nodes_last_month FROM nodedata WHERE snapshot_time >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') AND snapshot_time < DATE_TRUNC('month', CURRENT_DATE) AND state = 'Deleted';"
  },
  {
    "question": "Identify nodes with the most GPU resources.",
    "query": "SELECT node_id, node_name, instance_type, gpu_count FROM nodedata ORDER BY gpu_count DESC LIMIT 1;"
  },
  {
    "question": "What is the distribution of node instance types?",
    "query": "SELECT instance_type, COUNT(*) AS node_count FROM nodedata GROUP BY instance_type ORDER BY node_count DESC;"
  },
  {
    "question": "List all clusters with more than 5 nodes.",
    "query": "SELECT cluster_name FROM nodedata GROUP BY cluster_name HAVING COUNT(node_id) > 5;"
  },
  {
    "question": "Which clusters have the highest number of running pods?",
    "query": "SELECT cluster_name, COUNT(*) AS running_pod_count FROM poddata WHERE is_terminated = FALSE GROUP BY cluster_name ORDER BY running_pod_count DESC LIMIT 1;"
  },
  {
    "question": "Identify clusters with the most GPU resources.",
    "query": "SELECT cluster_name, SUM(gpu_quota) AS total_gpu_resources FROM initiativedata GROUP BY cluster_name ORDER BY total_gpu_resources DESC LIMIT 1;"
  },
  {
    "question": "What is the average CPU utilization per cluster?",
    "query": "SELECT cluster_name, AVG(dcgm_fi_dev_gpu_util) AS average_cpu_utilization FROM metrics GROUP BY cluster_name;"
  },
  {
    "question": "List clusters that have not reported metrics in the last 24 hours.",
    "query": "SELECT DISTINCT cluster_name FROM metrics WHERE metric_timestamp < NOW() - INTERVAL '24 hours';"
  },
  {
    "question": "Which clusters have nodes with memory greater than 128GB?",
    "query": "SELECT DISTINCT nd.cluster_name FROM nodedata nd JOIN instance_type_metadata itmd ON nd.instance_type = itmd.instance_type WHERE itmd.memory_mb > 128 * 1024;"
  },
  {
    "question": "How many clusters are associated with each platform?",
    "query": "SELECT platform, COUNT(DISTINCT cluster_name) AS cluster_count FROM nodedata GROUP BY platform;"
  },
  {
    "question": "Identify clusters with the highest number of terminated pods.",
    "query": "SELECT cluster_name, COUNT(*) AS terminated_pod_count FROM poddata WHERE is_terminated = TRUE GROUP BY cluster_name ORDER BY terminated_pod_count DESC LIMIT 1;"
  },
  {
    "question": "What is the distribution of clusters across different regions?",
    "query": "SELECT region, COUNT(DISTINCT cluster_name) AS cluster_count FROM costs_data GROUP BY region ORDER BY cluster_count DESC;"
  },
  {
    "question": "List clusters with the most diverse instance types.",
    "query": "SELECT cluster_name, COUNT(DISTINCT instance_type) AS distinct_instance_types FROM nodedata GROUP BY cluster_name ORDER BY distinct_instance_types DESC;"
  },
  {
    "question": "How many projects are associated with each initiative?",
    "query": "SELECT initiative_name, COUNT(DISTINCT project_id) AS project_count FROM projectdata GROUP BY initiative_name;"
  },
  {
    "question": "List projects with GPU quota exceeding 100.",
    "query": "SELECT project_name FROM projectdata WHERE gpu_quota > 100;"
  },
  {
    "question": "Which initiatives have the highest CPU quota?",
    "query": "SELECT initiative_name FROM initiativedata ORDER BY cpu_quota DESC LIMIT 1;"
  },
  {
    "question": "Identify projects that have not fetched metadata in the last month.",
    "query": "SELECT pd.project_id, pd.project_name FROM projectdata pd WHERE pd.last_fetched_time < NOW() - INTERVAL '1 month' ORDER BY pd.last_fetched_time;"
  },
  {
    "question": "What is the average memory quota per project?",
    "query": "SELECT AVG(memory_quota_mb) AS average_memory_quota_per_project FROM projectdata;"
  },
  {
    "question": "List initiatives created in the last 30 days.",
    "query": "SELECT initiative_name FROM initiativedata WHERE created_at >= CURRENT_DATE - INTERVAL '30 days';"
  },
  {
    "question": "Which projects have the highest number of running pods?",
    "query": "SELECT project, COUNT(*) AS running_pod_count FROM poddata WHERE is_terminated = FALSE GROUP BY project ORDER BY running_pod_count DESC LIMIT 1;"
  },
  {
    "question": "Identify initiatives with the most associated nodes.",
    "query": "SELECT initiative_name, COUNT(DISTINCT nodepool_id) AS node_count FROM initiativedata GROUP BY initiative_name ORDER BY node_count DESC LIMIT 1;"
  },
  {
    "question": "How many projects are using each node pool?",
    "query": "SELECT nodepool_id, COUNT(DISTINCT project_id) AS project_count FROM projectdata GROUP BY nodepool_id ORDER BY nodepool_id;"
  },
  {
    "question": "List projects with the most diverse cluster associations.",
    "query": "SELECT project_id, COUNT(DISTINCT cluster_name) AS distinct_cluster_count FROM projectdata GROUP BY project_id ORDER BY distinct_cluster_count DESC;"
  },
  {
    "question": "What are the account IDs of products categorized as 'COMPUTE-RI' and subcategorized as 'H200-RI' for April 2025?",
    "query": "SELECT account_id FROM costs_data WHERE category = 'COMPUTE-RI' AND subcategory = 'H200-RI' AND date_day >= '2025-04-01' AND date_day < '2025-05-01';"
  },
  {
    "question": "List total spend per account ID for the last quarter.",
    "query": "SELECT account_id, SUM(total_spend) AS total_spend FROM costs_data WHERE date_day >= DATE_TRUNC('quarter', CURRENT_DATE) - INTERVAL '1 quarter' AND date_day < DATE_TRUNC('quarter', CURRENT_DATE) GROUP BY account_id;"
  },
  {
    "question": "Which products incurred the highest costs in May 2025?",
    "query": "SELECT product_name, SUM(total_spend) AS total_cost FROM costs_data WHERE date_day >= '2025-05-01' AND date_day < '2025-06-01' GROUP BY product_name ORDER BY total_cost DESC LIMIT 1;"
  },
  {
    "question": "Identify regions with the highest total usage hours.",
    "query": "SELECT region, SUM(total_usage_hours) AS total_usage_hours FROM costs_data GROUP BY region ORDER BY total_usage_hours DESC LIMIT 1;"
  },
  {
    "question": "What is the average cost per instance type?",
    "query": "SELECT instance_type, AVG(total_spend) AS average_cost_per_instance_type FROM costs_data GROUP BY instance_type;"
  },
  {
    "question": "List accounts with spending above $10,000 in the last month.",
    "query": "SELECT account_id FROM costs_data WHERE date_day >= CURRENT_DATE - INTERVAL '1 month' GROUP BY account_id HAVING SUM(total_spend) > 10000;"
  },
  {
    "question": "Which subcategories have the highest total spend?",
    "query": "SELECT subcategory, SUM(total_spend) AS total_spend FROM costs_data GROUP BY subcategory ORDER BY total_spend DESC LIMIT 1;"
  },
  {
    "question": "Identify products with zero usage hours but incurred costs.",
    "query": "SELECT product_name FROM costs_data WHERE total_usage_hours = 0 AND total_spend > 0;"
  },
  {
    "question": "What is the distribution of costs across different environments?",
    "query": "SELECT env, SUM(total_spend) AS total_cost FROM costs_data GROUP BY env ORDER BY total_cost DESC;"
  },
  {
    "question": "List the top 5 most expensive instance types.",
    "query": "SELECT instance_type, SUM(total_spend) AS total_cost FROM costs_data GROUP BY instance_type ORDER BY total_cost DESC LIMIT 5;"
  },
  {
    "question": "What is the distribution of instance types?",
    "query": "SELECT instance_type, COUNT(*) AS instance_count FROM nodedata GROUP BY instance_type ORDER BY instance_count DESC;"
  },
  {
    "question": "List instance types with more than 8 GPUs.",
    "query": "SELECT instance_type FROM instance_type_metadata WHERE gpu_count > 8;"
  },
  {
    "question": "Identify instance types with CPU count exceeding 64.",
    "query": "SELECT instance_type FROM instance_type_metadata WHERE cpu_count > 64;"
  },
  {
    "question": "Which instance types have memory greater than 256GB?",
    "query": "SELECT instance_type FROM instance_type_metadata WHERE memory_mb > 256 * 1024;"
  },
  {
    "question": "What is the average GPU count across all instance types?",
    "query": "SELECT AVG(gpu_count) AS average_gpu_count FROM instance_type_metadata;"
  },
  {
    "question": "List instance types used in the 'runai' platform.",
    "query": "SELECT DISTINCT instance_type FROM nodedata WHERE platform = 'runai';"
  },
  {
    "question": "Identify instance types with the highest CPU to GPU ratio.",
    "query": "SELECT instance_type, (cpu_count / gpu_count) AS cpu_to_gpu_ratio FROM instance_type_metadata ORDER BY cpu_to_gpu_ratio DESC LIMIT 1;"
  },
  {
    "question": "What is the most commonly used instance type?",
    "query": "SELECT instance_type, COUNT(*) AS usage_count FROM nodedata GROUP BY instance_type ORDER BY usage_count DESC LIMIT 1;"
  },
  {
    "question": "List instance types that are no longer in use.",
    "query": "SELECT it.instance_type FROM instance_type_metadata it LEFT JOIN nodedata nd ON it.instance_type = nd.instance_type WHERE nd.node_id IS NULL;"
  },
  {
    "question": "Which instance types are associated with the highest costs?",
    "query": "SELECT instance_type, SUM(total_spend) AS total_cost FROM costs_data GROUP BY instance_type ORDER BY total_cost DESC LIMIT 1;"
  },
  {
    "question": "Which pods have the highest GPU utilization?",
    "query": "SELECT pod_id, pod_name, MAX(dcgm_fi_dev_gpu_util) AS max_gpu_utilization FROM metrics GROUP BY pod_id, pod_name ORDER BY max_gpu_utilization DESC LIMIT 1;"
  },
  {
    "question": "Identify pods with thermal violations.",
    "query": "SELECT DISTINCT pod_id FROM metrics WHERE dcgm_fi_dev_thermal_violation > 0;"
  },
  {
    "question": "List pods with power violations.",
    "query": "SELECT DISTINCT pod_id FROM metrics WHERE dcgm_fi_dev_power_violation > 0;"
  },
  {
    "question": "Which pods have low utilization violations?",
    "query": "SELECT pod_id, pod_name FROM metrics WHERE dcgm_fi_dev_low_util_violation > 0;"
  },
  {
    "question": "Identify pods with reliability issues.",
    "query": "SELECT DISTINCT pod_id FROM metrics WHERE dcgm_fi_dev_reliability_violation > 0;"
  },
  {
    "question": "What is the average SM occupancy across all pods?",
    "query": "SELECT AVG(dcgm_fi_prof_sm_occupancy) AS average_sm_occupancy FROM metrics;"
  },
  {
    "question": "List pods with the highest DRAM activity.",
    "query": "SELECT pod_id, pod_name, dcgm_fi_prof_dram_active FROM metrics ORDER BY dcgm_fi_prof_dram_active DESC LIMIT 10;"
  },
  {
    "question": "Which pods have the highest graphics engine activity.",
    "query": "SELECT pod_id, pod_name, dcgm_fi_prof_gr_engine_active FROM metrics ORDER BY dcgm_fi_prof_gr_engine_active DESC LIMIT 10;"
  },
  {
    "question": "Identify pods with the highest tensor core activity.",
    "query": "SELECT pod_id, pod_name, dcgm_fi_prof_pipe_tensor_active FROM metrics ORDER BY dcgm_fi_prof_pipe_tensor_active DESC LIMIT 1;"
  },
  {
    "question": "What is the average GPU temperature across all pods?",
    "query": "SELECT AVG(dcgm_fi_dev_gpu_temp) AS average_gpu_temperature FROM metrics;"
  }
]